{"version":3,"sources":["components/header/index.js","components/message/index.js","components/chatCard/index.js","components/quickReply/index.js","components/quickReplies/index.js","helpers/data.js","components/timetable/index.js","components/chatBot/index.js","components/cookiesPrompt/index.js","pages/home/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Cookies","className","style","fontSize","fontWeight","to","Message","speaks","text","padding","margin","marginBottom","ChatCard","props","height","paddingRight","float","marginTop","alt","payload","header","src","image","width","target","rel","href","link","cursor","onClick","getStarted","QuickReply","reply","event","click","QuickReplies","_handleClick","bind","this","replyClick","i","quickReplies","map","renderQuickReply","id","renderQuickReplies","Component","faqs","quizQuestions","answers","status","value","question","TimeTable","display","setDisplay","events","monday","name","type","startTime","moment","endTime","tuesday","wednesday","thursday","friday","position","zIndex","top","left","bottom","background","borderRadius","border","overflow","alignItems","justifyContent","borderBottom","color","cookies","Chatbot","sendTextQuery","noPush","a","says","msg","setState","messages","state","request","queryInput","languageCode","callClient","pushMessage","welcomePracticeUser","get","setTimeout","welcomeUserToQuiz","quizStarted","ask","Math","floor","random","length","talkInput","focus","messagesEnd","scrollIntoView","behavior","registerUser","email","axios","post","res","data","set","_id","existing","console","log","sendEventQuery","clientToken","token","config","headers","Authorization","queryResult","fulfillmentMessages","newMsg","includes","userData","parameters","notOnload","response","regenerateToken","that","displayBot","handleQuickReplyPayload","preventDefault","setSelectedOption","val","field","selectedOptions","push","computeScore","quizIndex","resetQuiz","score","displayResult","logout","remove","alert","window","location","reload","feedbackPrompt","logoutReady","sendFeedback","put","feedback","renderCards","cards","card","renderOneMessage","message","overflowY","quick_replies","points","intro","item","handleTextSubmit","e","shopWelcomeSent","optionType","chatOptions","userSaved","displayTable","undefined","uuid","path","correctAnswers","returnedMessages","pillStyle","lineHeight","optionStyle","marginRight","activeOptionStyle","right","minHeight","maxHeight","flexDirection","renderMessages","disabled","findIndex","ques","ref","el","clear","borderTop","onSubmit","paddingLeft","input","placeholder","onChange","withRouter","CookiesPropmpt","close","App","useState","displayCookiesPropmt","setDisplayCookiesPropmt","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.333f9813.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport \"./styles.css\";\r\nconst cookies = new Cookies();\r\nconst Header = () => (\r\n  <nav className=\"header app_back\">\r\n    <div className=\"header_title\">\r\n      <Link\r\n        style={{ fontSize: \"22px\", fontWeight: \"bold\" }}\r\n        to={\"/\"}\r\n        className=\"white bold\"\r\n      >\r\n        IT Courses Bot\r\n      </Link>\r\n    </div>\r\n  </nav>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nconst Message = ({ speaks, text }) => {\r\n  return (\r\n    <div className=\"col s12 m8 offset-m2 l6 offset-l3 message\">\r\n      <div\r\n        className=\"card-panel grey lighten-5 z-depth-1\"\r\n        style={{ padding: \"4px 16px\", margin: \"0.2rem 0 0.8rem\" }}\r\n      >\r\n        <div\r\n          className={`row valign-wrapper a_center ${\r\n            speaks === \"bot\" ? \"j_start\" : \"j_end\"\r\n          }`}\r\n          style={{ marginBottom: \"3px\" }}\r\n        >\r\n          {speaks === \"bot\" && (\r\n            <div className=\"col s2 mr_1\">\r\n              <div className=\"chat_title app_back row j_center a_center\">\r\n                {speaks}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className=\"col s10\">\r\n            <span className=\"black-text\">{text}</span>\r\n          </div>\r\n          {speaks === \"user\" && (\r\n            <div className=\"col s2 ml_1\">\r\n              <div\r\n                className=\"btn-floating btn-large waves-effect waves-light red\"\r\n                className=\"chat_title app_back row j_center a_center\"\r\n              >\r\n                {speaks}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nconst ChatCard = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"fit-content\",\r\n        paddingRight: 30,\r\n        float: \"left\",\r\n        marginTop: \"10px\",\r\n      }}\r\n    >\r\n      <div className=\"\">\r\n        <div className=\"card-image\">\r\n          <img\r\n            alt={props.payload.header}\r\n            src={props.payload.image}\r\n            style={{ height: \"100px\", width: \"150px\" }}\r\n          />\r\n          <span className=\"card-title\">{props.payload.header}</span>\r\n        </div>\r\n\r\n        <div className=\"card-action app_back\">\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href={props.payload.link}\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={props.getStarted}\r\n            className=\"white\"\r\n          >\r\n            Get started\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatCard;\r\n","import React from 'react';\r\n\r\n\r\nconst QuickReply = (props) => {\r\n    if (props.reply.payload) {\r\n        return (\r\n            <a style={{ margin: 3}} href=\"/\" className=\"btn-floating btn-large waves-effect waves-light red\"\r\n               onClick={(event) =>\r\n                   props.click(\r\n                       event,\r\n                       props.reply.payload,\r\n                       props.reply.text\r\n                   )\r\n               }>\r\n                {props.reply.text}\r\n            </a>\r\n        );\r\n    } else {\r\n        return (\r\n            <a style={{ margin: 3}} href={props.reply.link}\r\n               className=\"btn-floating btn-large waves-effect waves-light red\">\r\n                {props.reply.text}\r\n            </a>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default QuickReply;\r\n","import React, { Component } from \"react\";\r\nimport QuickReply from \"../quickReply\";\r\n\r\nclass QuickReplies extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this._handleClick = this._handleClick.bind(this);\r\n  }\r\n\r\n  _handleClick(event, payload, text) {\r\n    this.props.replyClick(event, payload, text);\r\n  }\r\n\r\n  renderQuickReply(reply, i) {\r\n    return <QuickReply key={i} click={this._handleClick} reply={reply} />;\r\n  }\r\n\r\n  renderQuickReplies(quickReplies) {\r\n    if (quickReplies) {\r\n      return quickReplies.map((reply, i) => {\r\n        return this.renderQuickReply(reply, i);\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col s12 m8 offset-m2 l6 offset-l3\">\r\n        <div className=\"card-panel grey lighten-5 z-depth-1\">\r\n          <div className=\"row valign-wrapper\">\r\n            <div className=\"col s2\">\r\n              <a\r\n                href=\"/\"\r\n                className=\"btn-floating btn-large waves-effect waves-light red\"\r\n              >\r\n                {this.props.speaks}\r\n              </a>\r\n            </div>\r\n            <div id=\"quick-replies\" className=\"col s10\">\r\n              {this.props.text && <p>{this.props.text}</p>}\r\n              {this.renderQuickReplies(this.props.payload)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickReplies;\r\n","export const faqs = [\r\n  \"Do I need to own my own personal computer?\",\r\n  \"I am ready to look at the Computer Science curriculum, where do I go from here?\",\r\n  \"Is Computer Science the right choice of major for me?\",\r\n  \"Some people I know have a technology-related job without studying much Mathematics in their college major. However, I see that a degree in Computer Science involves a lot of mathematics. Why do you require it?\",\r\n  \"What are some career opportunities for Computer Science majors?\",\r\n  \"What courses will transfer into UALR’s Computer Science Department?\",\r\n  \"What is Computer Science?\",\r\n  \"What kind of a student succeeds as a Computer Science major?\",\r\n  \"Why should I study Computer Science?\",\r\n];\r\n\r\nexport const quizQuestions = [\r\n  {\r\n    answers: [\r\n      {\r\n        status: true,\r\n        value: \"Time\",\r\n      },\r\n      {\r\n        status: false,\r\n        value: \"Air\",\r\n      },\r\n    ],\r\n    question:\r\n      \"Which one of the following options is part of the five dimensions in Interaction Design?\",\r\n  },\r\n  {\r\n    question:\r\n      \"Which one of the following options is part of the Design Principles in Interaction Design?\",\r\n    answers: [\r\n      {\r\n        status: false,\r\n        value: \"None\",\r\n      },\r\n      {\r\n        status: true,\r\n        value: \"Visibility\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    answers: [\r\n      {\r\n        status: true,\r\n        value: \"Evaluating Systems\",\r\n      },\r\n      {\r\n        value: \"Testing\",\r\n        status: false,\r\n      },\r\n    ],\r\n    question: \"What do we utilize Usability Principles for?\",\r\n  },\r\n  {\r\n    answers: [\r\n      {\r\n        status: true,\r\n        value: \"Designing Interactive Products\",\r\n      },\r\n      {\r\n        status: false,\r\n        value: \"Programming\",\r\n      },\r\n    ],\r\n    question: \"Interaction Design is concerned with?\",\r\n  },\r\n  {\r\n    answers: [\r\n      {\r\n        status: true,\r\n        value: \"Career option\",\r\n      },\r\n      {\r\n        status: false,\r\n        value: \"Purchase\",\r\n      },\r\n    ],\r\n    question: \"Interaction Design can be a potential____?\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport Timetable from \"react-timetable-events\";\r\nimport moment from \"moment\";\r\nimport \"./styles.css\";\r\nconst TimeTable = ({ display, setDisplay }) => {\r\n  const events = {\r\n    monday: [\r\n      {\r\n        id: 1,\r\n        name: \"HCI\",\r\n        type: \"custom\",\r\n        startTime: moment(\"2018-02-23T11:30:00\"),\r\n        endTime: moment(\"2018-02-23T13:30:00\"),\r\n      },\r\n    ],\r\n    tuesday: [\r\n      {\r\n        id: 2,\r\n        name: \"AI\",\r\n        type: \"custom\",\r\n        startTime: moment(\"2018-02-22T12:30:00\"),\r\n        endTime: moment(\"2018-02-22T14:30:00\"),\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"ML\",\r\n        type: \"custom\",\r\n        startTime: moment(\"2018-02-22T16:30:00\"),\r\n        endTime: moment(\"2018-02-22T18:45:00\"),\r\n      },\r\n    ],\r\n    wednesday: [],\r\n    thursday: [],\r\n    friday: [],\r\n  };\r\n  return display ? (\r\n    <div\r\n      style={{\r\n        position: \"fixed\",\r\n        zIndex: \"9999999999\",\r\n        top: \"20px\",\r\n        left: \"0px\",\r\n        bottom: \"20px\",\r\n        width: \"70%\",\r\n        height: \"90vh\",\r\n        background: \"#fff\",\r\n        borderRadius: \"10px\",\r\n        padding: \"15px\",\r\n        border: \"1px solid #ee6e73\",\r\n        overflow: \"scroll\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          borderBottom: \"1px solid #ee6e73\",\r\n        }}\r\n      >\r\n        <h3>Time Table</h3>{\" \"}\r\n        <button\r\n          onClick={setDisplay}\r\n          style={{\r\n            cursor: \"pointer\",\r\n            background: \"#F44336\",\r\n            color: \"#fff\",\r\n            border: \"none\",\r\n          }}\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n      <Timetable events={events} />\r\n    </div>\r\n  ) : null;\r\n};\r\nexport default TimeTable;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport Message from \"../message\";\r\nimport Card from \"../chatCard\";\r\nimport QuickReplies from \"../quickReplies\";\r\nimport { faqs, quizQuestions } from \"../../helpers/data\";\r\nimport Timetable from \"../timetable\";\r\nconst cookies = new Cookies();\r\n\r\nclass Chatbot extends Component {\r\n  messagesEnd;\r\n  talkInput;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      text: \"\",\r\n      displayBot: true,\r\n      shopWelcomeSent: false,\r\n      clientToken: false,\r\n      regenerateToken: 0,\r\n      optionType: \"\",\r\n      chatOptions: [],\r\n      name: \"\",\r\n      email: \"\",\r\n      userSaved: false,\r\n      notOnload: false,\r\n      quizIndex: 0,\r\n      quizStarted: false,\r\n      selectedOptions: [],\r\n      score: 0,\r\n      displayResult: false,\r\n      displayTable: false,\r\n      logoutReady: false,\r\n    };\r\n\r\n    if (cookies.get(\"users_id\") === undefined) {\r\n      cookies.set(\"users_id\", uuid(), { path: \"/\" });\r\n    }\r\n  }\r\n\r\n  // Function to send text query to dialogflow\r\n  // The parameter noPush determines weather the user message should be displayed on the screen or not\r\n  sendTextQuery = async (text, noPush) => {\r\n    let says = {\r\n      speaks: \"user\",\r\n      msg: {\r\n        text: {\r\n          text: text,\r\n        },\r\n      },\r\n    };\r\n    if (!noPush) {\r\n      this.setState({ messages: [...this.state.messages, says] });\r\n    }\r\n    const request = {\r\n      queryInput: {\r\n        text: {\r\n          text: text,\r\n          languageCode: \"en-US\",\r\n        },\r\n      },\r\n    };\r\n\r\n    await this.callClient(request);\r\n  };\r\n\r\n  //   Function to push message to chatbot\r\n  pushMessage = (text) => {\r\n    let says = {\r\n      speaks: \"bot\",\r\n      msg: {\r\n        text: {\r\n          text: text,\r\n        },\r\n      },\r\n    };\r\n    this.setState({ messages: [...this.state.messages, says] });\r\n  };\r\n\r\n  // Function to welcome users to the course\r\n  welcomePracticeUser = () => {\r\n    let says = {\r\n      speaks: \"bot\",\r\n      msg: {\r\n        text: {\r\n          text: `Welcome ${cookies.get(\r\n            \"user_name\"\r\n          )}! Your course will start in a moment\"`,\r\n        },\r\n      },\r\n    };\r\n    this.setState({ messages: [...this.state.messages, says] });\r\n\r\n    setTimeout(() => {\r\n      this.sendTextQuery(\"teach\", true);\r\n    }, 1500);\r\n  };\r\n  // Function to welcome users to the quiz\r\n  welcomeUserToQuiz = () => {\r\n    let says = {\r\n      speaks: \"bot\",\r\n      msg: {\r\n        text: {\r\n          text: `Hold up tight ${cookies.get(\r\n            \"user_name\"\r\n          )}! Quiz will be up in a bit.\"`,\r\n        },\r\n      },\r\n    };\r\n    this.setState({ messages: [...this.state.messages, says] });\r\n\r\n    setTimeout(() => {\r\n      this.setState({ quizStarted: true });\r\n    }, 1500);\r\n  };\r\n\r\n  // Function to randomize FAQs and query dialog flow with random questions\r\n  ask = async () => {\r\n    let question = faqs[Math.floor(Math.random() * faqs.length)];\r\n    let says = {\r\n      speaks: \"user\",\r\n      msg: {\r\n        text: {\r\n          text: question,\r\n        },\r\n      },\r\n    };\r\n    this.setState({ messages: [...this.state.messages, says] });\r\n    this.talkInput.focus();\r\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n    const request = {\r\n      queryInput: {\r\n        text: {\r\n          text: question,\r\n          languageCode: \"en-US\",\r\n        },\r\n      },\r\n    };\r\n\r\n    setTimeout(async () => {\r\n      await this.callClient(request);\r\n    }, 2000);\r\n  };\r\n\r\n  // Function to register users\r\n  registerUser = async () => {\r\n    const payload = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n    };\r\n\r\n    try {\r\n      let res = await axios.post(\r\n        \"https://university-bot-app.herokuapp.com/auth/register\",\r\n        payload\r\n      );\r\n\r\n      if (res && res.data) {\r\n        cookies.set(\"user_name\", res.data.name);\r\n        cookies.set(\"user_email\", res.data.email);\r\n        cookies.set(\"user_id\", res.data._id);\r\n        if (res.data.existing) {\r\n          this.pushMessage(\r\n            `Looks like you're already enroled with this email, ${res.data.name} `\r\n          );\r\n        }\r\n        console.log(res.data);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //   Function to get is used to query\r\n  sendEventQuery = async (event) => {\r\n    const request = {\r\n      queryInput: {\r\n        event: {\r\n          name: event,\r\n          languageCode: \"en-US\",\r\n        },\r\n      },\r\n    };\r\n\r\n    await this.callClient(request);\r\n  };\r\n\r\n  // Fuction to query dialogflow with all user and bot inputs\r\n  callClient = async (request) => {\r\n    try {\r\n      if (this.state.clientToken === false) {\r\n        const res = await axios.get(\r\n          \"https://university-bot-app.herokuapp.com/auth/get-token\"\r\n        );\r\n        this.setState({ clientToken: res.data.token });\r\n      }\r\n\r\n      var config = {\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.state.clientToken,\r\n          \"Content-Type\": \"application/json; charset=utf-8\",\r\n        },\r\n      };\r\n\r\n      const res = await axios.post(\r\n        \"https://dialogflow.googleapis.com/v2/projects/\" +\r\n          \"universitybot-pfkg\" +\r\n          \"/agent/sessions/\" +\r\n          \"randomstringfortoday!@w9dmWgyIzrF3x2MDP\" +\r\n          cookies.get(\"users_id\") +\r\n          \":detectIntent\",\r\n        request,\r\n        config\r\n      );\r\n\r\n      let says = {};\r\n      // To loop through dialogflow response\r\n      if (res.data.queryResult.fulfillmentMessages) {\r\n        for (let msg of res.data.queryResult.fulfillmentMessages) {\r\n          says = {\r\n            speaks: \"bot\",\r\n            msg: msg,\r\n          };\r\n          let newMsg = msg && msg.text && msg.text.text && msg.text.text[0];\r\n\r\n          this.setState({ messages: [...this.state.messages, says] });\r\n\r\n          // Check if quiz should start\r\n          if (newMsg) {\r\n            if (newMsg.includes(\"course quiz\")) {\r\n              setTimeout(() => {\r\n                this.setState({ quizStarted: true });\r\n              }, 1500);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      let userData = res.data.queryResult.parameters;\r\n      let { name, email } = this.state;\r\n      if (!name || !email) {\r\n        this.setState({ name: userData.name, email: userData.email });\r\n      }\r\n\r\n      if (userData.name && userData.email) {\r\n        this.setState({ notOnload: true });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      if (\r\n        e &&\r\n        e.response &&\r\n        e.response.status === 401 &&\r\n        this.state.regenerateToken < 1\r\n      ) {\r\n        this.setState({ clientToken: false, regenerateToken: 1 });\r\n        this.callClient(request);\r\n      } else if (e) {\r\n        console.log(\"Inconvenience\", e);\r\n        let says = {\r\n          speaks: \"bot\",\r\n          msg: {\r\n            text: {\r\n              text:\r\n                \"I'm having inconveniences. I have to be end. will be back afterward\",\r\n            },\r\n          },\r\n        };\r\n        this.setState({ messages: [...this.state.messages, says] });\r\n        let that = this;\r\n        setTimeout(function () {\r\n          that.setState({ displayBot: false });\r\n        }, 2000);\r\n      }\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    //   Send welcome query\r\n    this.sendEventQuery(\"Welcome\");\r\n    // To check if user is logged in and get user details onmount\r\n\r\n    try {\r\n      let response = await axios.post(\r\n        \"https://university-bot-app.herokuapp.com/auth/login\",\r\n        {\r\n          email: cookies.get(\"user_email\") || \"\",\r\n        }\r\n      );\r\n      if (response && response.data && response.data.name) {\r\n        cookies.set(\"user_name\", response.data.name);\r\n        cookies.set(\"user_email\", response.data.email);\r\n        cookies.set(\"user_id\", response.data._id);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    this.setState({\r\n      name: cookies.get(\"user_name\"),\r\n      email: cookies.get(\"user_email\"),\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    let { name, email, userSaved, notOnload, displayResult } = this.state;\r\n\r\n    // Scroll to bottom when new text get pushed to the chatbot\r\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n    if (this.talkInput) {\r\n      this.talkInput.focus();\r\n    }\r\n    // Register or get registered user\r\n    if (name && email && !userSaved && notOnload) {\r\n      this.registerUser();\r\n      this.setState({ userSaved: true });\r\n    }\r\n    // Close quiz result\r\n    if (displayResult) {\r\n      setTimeout(() => {\r\n        this.resetQuiz();\r\n      }, 5);\r\n    }\r\n  }\r\n\r\n  //   To compute quiz score\r\n  computeScore(state) {\r\n    let correctAnswers = [];\r\n    let i;\r\n    for (i = 0; i < state.length; i++) {\r\n      if (state[i].status === true) {\r\n        correctAnswers.push(state[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({ score: correctAnswers.length });\r\n    if (state.length === 5) {\r\n      this.setState({ displayResult: true });\r\n      this.pushMessage(\r\n        `${this.state.score >= 3 ? \"Good job\" : \"Hmm,\"} ${\r\n          this.state.name\r\n        }, your scored ${this.state.score} out of ${quizQuestions.length}`\r\n      );\r\n    }\r\n  }\r\n  //   To\r\n\r\n  handleQuickReplyPayload = (event, payload, text) => {\r\n    event.preventDefault();\r\n\r\n    switch (payload) {\r\n      case \"recommended_yes\":\r\n        this.sendEventQuery(\"SHOW_RECOMMENDATIONS\");\r\n        break;\r\n      case \"training_masterclass\":\r\n        this.sendEventQuery(\"MASTERCLASS\");\r\n        break;\r\n      default:\r\n        this.sendTextQuery(text);\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Collect selected answers from quiz\r\n  setSelectedOption = (val) => {\r\n    let field = [...this.state.selectedOptions];\r\n    field.push(val);\r\n    this.computeScore(field);\r\n    if (this.state.selectedOptions.length < quizQuestions.length) {\r\n      this.setState({ selectedOptions: field });\r\n    } else {\r\n      return;\r\n    }\r\n    if (this.state.selectedOptions.length < quizQuestions.length - 1) {\r\n      this.setState({\r\n        quizIndex: this.state.quizIndex + 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Reset quiz parameters\r\n  resetQuiz = () => {\r\n    this.setState({\r\n      quizStarted: false,\r\n      quizIndex: 0,\r\n      selectedOptions: [],\r\n      score: 0,\r\n      displayResult: false,\r\n    });\r\n  };\r\n\r\n  // To log user out\r\n\r\n  logout = () => {\r\n    cookies.remove(\"user_id\");\r\n    cookies.remove(\"user_name\");\r\n    cookies.remove(\"user_email\");\r\n    alert(\"Logged out successfully\");\r\n    this.setState({ displayBot: false });\r\n    window.location.reload();\r\n  };\r\n\r\n  // To prompt user for a feedback\r\n  feedbackPrompt = () => {\r\n    this.setState({ logoutReady: true });\r\n    this.pushMessage(\r\n      \"Before you logout, kindly drop a feedback for me, thank you.\"\r\n    );\r\n  };\r\n  // To collect and send feedback to backend\r\n  sendFeedback = async () => {\r\n    try {\r\n      let response = await axios.put(\r\n        `https://university-bot-app.herokuapp.com/feedback/${cookies.get(\r\n          \"user_id\"\r\n        )}`,\r\n        { feedback: this.state.text }\r\n      );\r\n      console.log(response);\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      this.logout();\r\n    }\r\n  };\r\n\r\n  //   To display get started cards\r\n  renderCards = (cards) => {\r\n    return cards.map((card, i) => (\r\n      <Card\r\n        key={i}\r\n        payload={card}\r\n        getStarted={() => this.sendTextQuery(\"Get started\", true)}\r\n      />\r\n    ));\r\n  };\r\n\r\n  // To display messages\r\n  renderOneMessage = (message, i) => {\r\n    if (message.msg && message.msg.text && message.msg.text.text) {\r\n      return message.msg.text.text ? (\r\n        <Message key={i} speaks={message.speaks} text={message.msg.text.text} />\r\n      ) : null;\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.cards\r\n    ) {\r\n      return (\r\n        <div key={i}>\r\n          <div\r\n            className=\"card-panel grey lighten-5 z-depth-1\"\r\n            style={{ padding: \"4px 16px\", margin: \"0.2rem 0 0.8rem\" }}\r\n          >\r\n            <div style={{ overflow: \"hidden\" }}>\r\n              <div className=\"col s2\">\r\n                <a\r\n                  href=\"/\"\r\n                  className=\"chat_title app_back row j_center a_center\"\r\n                >\r\n                  {message.speaks}\r\n                </a>\r\n              </div>\r\n              <div style={{ overflow: \"auto\", overflowY: \"scroll\" }}>\r\n                <div\r\n                  style={{\r\n                    height: \"fit-content\",\r\n                    width: message.msg.payload.cards.length * 270,\r\n                  }}\r\n                >\r\n                  {this.renderCards(message.msg.payload.cards)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.quick_replies\r\n    ) {\r\n      return (\r\n        <QuickReplies\r\n          text={message.msg.payload.text ? message.msg.payload.text : null}\r\n          key={i}\r\n          replyClick={this.handleQuickReplyPayload}\r\n          speaks={message.speaks}\r\n          payload={message.msg.payload.quick_replies}\r\n        />\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.points\r\n    ) {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <div\r\n              className=\"card-panel grey lighten-5 z-depth-1\"\r\n              style={{ padding: \"4px 16px\", margin: \"0.2rem 0 0.8rem\" }}\r\n            >\r\n              <div style={{ overflow: \"hidden\" }}>\r\n                <div className=\"col s2\">\r\n                  <a\r\n                    href=\"/\"\r\n                    className=\"chat_title app_back row j_center a_center\"\r\n                  >\r\n                    bot\r\n                  </a>\r\n\r\n                  <div className=\"col s10\" style={{ marginBottom: \"7px\" }}>\r\n                    <span className=\"black-text\">\r\n                      {message.msg.payload.intro}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div style={{ overflow: \"auto\", overflowY: \"scroll\" }}>\r\n                  <div\r\n                    style={{\r\n                      height: \"fit-content\",\r\n                      width: \"100%\",\r\n                    }}\r\n                  >\r\n                    <div>\r\n                      {message.msg.payload.points.map((item, i) => {\r\n                        return (\r\n                          <button\r\n                            key={i + item.name}\r\n                            style={{\r\n                              width: \" fit-content\",\r\n                              height: \" fit-content\",\r\n                              padding: \"10px\",\r\n                              borderRadius: \"10px\",\r\n                              margin: \"0 10px 10px 0 \",\r\n                            }}\r\n                            onClick={() => this.sendTextQuery(item.name)}\r\n                          >\r\n                            {item.name}\r\n                          </button>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  renderMessages(returnedMessages) {\r\n    if (returnedMessages) {\r\n      return returnedMessages.map((message, i) => {\r\n        return this.renderOneMessage(message, i);\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  handleTextSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.logoutReady) {\r\n      await this.sendFeedback();\r\n    } else {\r\n      this.sendTextQuery(this.state.text);\r\n    }\r\n    this.setState({ text: \"\" });\r\n  };\r\n\r\n  render() {\r\n    let pillStyle = {\r\n      width: \" fit-content\",\r\n      height: \" fit-content\",\r\n      padding: \"1px 10px\",\r\n      borderRadius: \"10px\",\r\n      lineHeight: \"32px\",\r\n    };\r\n\r\n    let optionStyle = {\r\n      width: \" fit-content\",\r\n      height: \" fit-content\",\r\n      padding: \"10px\",\r\n      borderRadius: \"10px\",\r\n      marginRight: \"10px\",\r\n    };\r\n\r\n    let activeOptionStyle = {\r\n      width: \" fit-content\",\r\n      height: \" fit-content\",\r\n      padding: \"10px\",\r\n      borderRadius: \"10px\",\r\n      marginRight: \"10px\",\r\n      background: \"#F44336\",\r\n    };\r\n\r\n    let fixedOptionsStyle = {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n      padding: \"7px 20px\",\r\n      borderBottom: \"3px solid #f8f8f8\",\r\n      borderTop: \"3px solid #f8f8f8\",\r\n    };\r\n    if (this.state.displayBot) {\r\n      return (\r\n        <>\r\n          <nav\r\n            style={{\r\n              width: 600,\r\n              position: \"fixed\",\r\n              bottom: \"70vh\",\r\n              right: 0,\r\n              height: \"50px\",\r\n              lineHeight: \"50px\",\r\n              padding: \"0 20px\",\r\n            }}\r\n            className=\"app_back\"\r\n          >\r\n            <div className=\"nav-wrapper row a_center j_between\">\r\n              <a\r\n                href=\"/#\"\r\n                className=\"brand-logo white\"\r\n                style={{ fontSize: \"24px\" }}\r\n              >\r\n                University bot\r\n              </a>\r\n\r\n              <div>\r\n                <span\r\n                  className=\"white pointer mr_1\"\r\n                  href=\"/#\"\r\n                  onClick={() =>\r\n                    this.setState({ displayBot: !this.state.displayBot })\r\n                  }\r\n                >\r\n                  Hide\r\n                </span>\r\n                {cookies.get(\"user_email\") && (\r\n                  <span\r\n                    className=\"pointer danger\"\r\n                    onClick={() => {\r\n                      this.feedbackPrompt();\r\n                    }}\r\n                  >\r\n                    Logout\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </nav>\r\n          <div\r\n            style={{\r\n              minHeight: \"fit-content\",\r\n              maxHeight: \"70vh\",\r\n              height: \"100%\",\r\n              width: 600,\r\n              position: \"fixed\",\r\n              bottom: 2,\r\n              right: 0,\r\n              overflowY: \"scroll\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-start\",\r\n              justifyContent: \"space-between\",\r\n              border: \"1px solid #9e9e9e\",\r\n              background: \"#fff\",\r\n            }}\r\n          >\r\n            <div\r\n              id=\"chatbot\"\r\n              style={{\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                overflow: \"auto\",\r\n              }}\r\n            >\r\n              {this.renderMessages(this.state.messages)}\r\n\r\n              {cookies.get(\"user_name\") &&\r\n              cookies.get(\"user_email\") &&\r\n              this.state.quizStarted ? (\r\n                <div>\r\n                  <div>\r\n                    <div\r\n                      className=\"card-panel grey lighten-5 z-depth-1\"\r\n                      style={{ padding: \"4px 16px\", margin: \"0.2rem 0 0.8rem\" }}\r\n                    >\r\n                      <div style={{ overflow: \"hidden\" }}>\r\n                        <div className=\"col s2\">\r\n                          <a\r\n                            href=\"/\"\r\n                            className=\"chat_title app_back row j_center a_center\"\r\n                          >\r\n                            bot\r\n                          </a>\r\n\r\n                          <div\r\n                            className=\"col s10\"\r\n                            style={{ marginBottom: \"7px\" }}\r\n                          >\r\n                            <span className=\"black-text\">\r\n                              {quizQuestions[this.state.quizIndex].question}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        <div style={{ overflow: \"auto\", overflowY: \"scroll\" }}>\r\n                          <div\r\n                            style={{\r\n                              height: \"fit-content\",\r\n                              width: \"100%\",\r\n                            }}\r\n                          >\r\n                            <div>\r\n                              {quizQuestions[this.state.quizIndex].answers.map(\r\n                                (item, i) => {\r\n                                  return (\r\n                                    <button\r\n                                      key={i + item.value}\r\n                                      style={\r\n                                        this.state.selectedOptions &&\r\n                                        this.state.selectedOptions[\r\n                                          this.state.quizIndex\r\n                                        ] &&\r\n                                        this.state.selectedOptions[\r\n                                          this.state.quizIndex\r\n                                        ].value === item.value\r\n                                          ? activeOptionStyle\r\n                                          : optionStyle\r\n                                      }\r\n                                      disabled={\r\n                                        this.state.quizIndex !==\r\n                                        quizQuestions.findIndex((ques) => {\r\n                                          return (\r\n                                            ques.question ===\r\n                                            quizQuestions[this.state.quizIndex]\r\n                                              .question\r\n                                          );\r\n                                        })\r\n                                      }\r\n                                      onClick={() =>\r\n                                        this.setSelectedOption(item)\r\n                                      }\r\n                                    >\r\n                                      {item.value}\r\n                                    </button>\r\n                                  );\r\n                                }\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n              <div\r\n                ref={(el) => {\r\n                  this.messagesEnd = el;\r\n                }}\r\n                style={{ float: \"left\", clear: \"both\" }}\r\n              ></div>\r\n            </div>\r\n\r\n            <section style={fixedOptionsStyle}>\r\n              <button\r\n                disabled={this.state.quizStarted}\r\n                className=\"btn-floating btn-auto waves-effect waves-light red\"\r\n                style={pillStyle}\r\n                onClick={() => {\r\n                  this.talkInput.focus();\r\n                  if (cookies.get(\"user_name\")) {\r\n                    this.pushMessage(\r\n                      `Welcome back ${cookies.get(\r\n                        \"user_name\"\r\n                      )}! Hit the \"Teaching assistant button to continue your course\"`\r\n                    );\r\n                  } else {\r\n                    this.sendTextQuery(\"recommend\", true);\r\n                  }\r\n                }}\r\n              >\r\n                Course enrolment\r\n              </button>\r\n              <button\r\n                className=\"btn-floating btn-auto waves-effect waves-light red\"\r\n                style={pillStyle}\r\n                onClick={this.ask}\r\n                disabled={this.state.quizStarted}\r\n              >\r\n                FAQs\r\n              </button>{\" \"}\r\n              <button\r\n                className=\"btn-floating btn-auto waves-effect waves-light red\"\r\n                style={pillStyle}\r\n                disabled={this.state.quizStarted}\r\n                onClick={() => {\r\n                  this.talkInput.focus();\r\n\r\n                  if (cookies.get(\"user_name\")) {\r\n                    this.welcomeUserToQuiz();\r\n                  } else {\r\n                    this.sendTextQuery(\"quiz\", true);\r\n                  }\r\n                }}\r\n              >\r\n                Quiz\r\n              </button>{\" \"}\r\n              <button\r\n                className=\"btn-floating btn-auto waves-effect waves-light red\"\r\n                style={pillStyle}\r\n                disabled={this.state.quizStarted}\r\n                onClick={() => {\r\n                  this.talkInput.focus();\r\n                  if (cookies.get(\"user_name\")) {\r\n                    this.welcomePracticeUser();\r\n                  } else {\r\n                    this.sendTextQuery(\"teach\", true);\r\n                  }\r\n                }}\r\n              >\r\n                Teaching assistant\r\n              </button>\r\n              <button\r\n                className=\"btn-floating btn-auto waves-effect waves-light red\"\r\n                style={pillStyle}\r\n                disabled={this.state.quizStarted}\r\n                onClick={() =>\r\n                  this.setState({ displayTable: !this.state.displayTable })\r\n                }\r\n              >\r\n                Time table\r\n              </button>\r\n            </section>\r\n\r\n            <Timetable\r\n              display={this.state.displayTable}\r\n              setDisplay={() => this.setState({ displayTable: false })}\r\n            />\r\n\r\n            <form\r\n              className=\" col s12\"\r\n              style={{ width: \"100%\" }}\r\n              onSubmit={this.handleTextSubmit}\r\n            >\r\n              <input\r\n                disabled={this.state.quizStarted}\r\n                style={{\r\n                  margin: 0,\r\n                  paddingLeft: \"1%\",\r\n                  paddingRight: \"1%\",\r\n                  width: \"98%\",\r\n                  height: \"2.5rem\",\r\n                }}\r\n                ref={(input) => {\r\n                  this.talkInput = input;\r\n                }}\r\n                value={this.state.text}\r\n                placeholder=\"type a message:\"\r\n                id=\"user_says\"\r\n                type=\"text\"\r\n                onChange={(e) => this.setState({ text: e.target.value })}\r\n              />\r\n            </form>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          style={{\r\n            minHeight: 40,\r\n            maxHeight: 500,\r\n            width: 600,\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n          }}\r\n        >\r\n          <nav\r\n            style={{ padding: \"0 20px\", height: \"50px\" }}\r\n            className=\"app_back\"\r\n          >\r\n            <div className=\"nav-wrapper row a_center j_between\">\r\n              <a\r\n                href=\"/#\"\r\n                className=\"brand-logo white\"\r\n                style={{ fontSize: \"24px\" }}\r\n              >\r\n                University bot\r\n              </a>\r\n\r\n              <div>\r\n                <span\r\n                  className=\"white pointer mr_1\"\r\n                  href=\"/#\"\r\n                  onClick={() =>\r\n                    this.setState({ displayBot: !this.state.displayBot })\r\n                  }\r\n                >\r\n                  Display\r\n                </span>\r\n\r\n                {cookies.get(\"user_email\") && (\r\n                  <span\r\n                    className=\"pointer danger\"\r\n                    onClick={() => {\r\n                      this.feedbackPrompt();\r\n                    }}\r\n                  >\r\n                    Logout\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </nav>\r\n          <div\r\n            ref={(el) => {\r\n              this.messagesEnd = el;\r\n            }}\r\n            style={{ float: \"left\", clear: \"both\" }}\r\n          ></div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Chatbot);\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nconst CookiesPropmpt = ({ display, close }) => {\r\n  return display ? (\r\n    <div className=\"black_back cookies_propmpt row a_center j_center\">\r\n      <p className=\"white\">\r\n        This website uses cookies to ensure you get the best experience on our\r\n        website.\r\n      </p>\r\n      <button className=\"danger_back white ml_1 pointer\" onClick={close}>\r\n        GOT IT!\r\n      </button>\r\n    </div>\r\n  ) : null;\r\n};\r\nexport default CookiesPropmpt;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../components/header\";\r\nimport Chatbot from \"../../components/chatBot\";\r\nimport CookiesPropmpt from \"../../components/cookiesPrompt\";\r\nimport Cookies from \"universal-cookie\";\r\nimport \"./styles.css\";\r\nconst cookies = new Cookies();\r\nconst App = () => {\r\n  const [displayCookiesPropmt, setDisplayCookiesPropmt] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!cookies.get(\"user_name\")) {\r\n      setDisplayCookiesPropmt(true);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <Chatbot />\r\n      <CookiesPropmpt\r\n        display={displayCookiesPropmt}\r\n        close={() => setDisplayCookiesPropmt(false)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from \"./pages/home\";\nimport \"./index.css\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Home />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}